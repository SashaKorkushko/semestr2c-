#include <iostream>
#include <string>
#include <cmath>
using namespace std;

class Fraction {
public:
    Fraction(int numerator, int denominator);
    string toString();
    double toDouble();

private:
    int numerator;
    int denominator;
};

Fraction::Fraction(int numerator, int denominator) {
    this->numerator = numerator;
    this->denominator = denominator;
}

string Fraction::toString() {
    int whole = numerator / denominator; 
    int remainder = abs(numerator) % abs(denominator); 
    string sign = (numerator * denominator < 0) ? "-" : "";  

    if (whole != 0 && remainder != 0) {
        return sign + to_string(whole) + " " + to_string(remainder) + "/" + to_string(abs(denominator));
    } else if (whole != 0) {
        return sign + to_string(whole);
    } else {
        return sign + to_string(numerator) + "/" + to_string(abs(denominator));
    }
}

double Fraction::toDouble() {
    return static_cast<double>(numerator) / denominator;
}

int main() {
    int num, den;
    string input;

    cout << "Enter a fraction in the form '[numerator] / [denominator]': ";
    getline(cin, input);

   
    size_t slashPos = input.find('/');
    if (slashPos != string::npos) {
        num = stoi(input.substr(0, slashPos));
        den = stoi(input.substr(slashPos + 1));
    } else {
        cout << "Invalid input format." << endl;
        return 0;
    }

    Fraction fraction(num, den);
    cout << fraction.toString() << " is " << fraction.toDouble() << " in decimal." << endl;

    return 0;
}
